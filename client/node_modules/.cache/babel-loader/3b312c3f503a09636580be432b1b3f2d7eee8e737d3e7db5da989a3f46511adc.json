{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\n//pdf\n//import axios from 'axios';\nimport { Document, Packer, Paragraph, TextRun } from 'docx';\nimport pdfMake from 'pdfmake/build/pdfmake';\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\n//word\n//import Docxtemplater from 'docxtemplater';\n//import { generateDocx } from 'docxtemplater-utils';\n//import PizZip from 'pizzip';\n//import JSZip from 'jszip';\nimport { saveAs } from 'file-saver';\npdfMake.vfs = pdfFonts.pdfMake.vfs;\nimport { makeRequest } from '@/axios';\nimport { CountUp } from 'countup.js';\nexport default {\n  name: 'AllRecords',\n  data() {\n    return {\n      count: 0,\n      numrecords: 0,\n      numtoday: 0,\n      records: [],\n      record_search: '',\n      itemsPerPage: 5,\n      currentPage: 1,\n      delete_id: null,\n      viewed_record: [],\n      view_user_info: []\n    };\n  },\n  methods: {\n    async num_records_animate() {\n      try {\n        const num = await makeRequest.get('/records/count');\n        const options = {\n          duration: 3,\n          separator: ','\n        };\n        const numUserCountUp = new CountUp('numrecords', num.data, this.numrecords, options);\n        numUserCountUp.start();\n        this.numrecords = num.data;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async num_today_animate() {\n      try {\n        const num = await makeRequest.get('/records/countToday');\n        const options = {\n          duration: 3,\n          separator: ','\n        };\n        const numUserCountUp = new CountUp('numtoday', num.data, this.numtoday, options);\n        numUserCountUp.start();\n        this.numtoday = num.data;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    fetch_records() {\n      makeRequest.get('/records/').then(result => {\n        if (!result.data.Error) {\n          this.records = result.data;\n          console.log(result.data);\n        } else {\n          this.$toast.error(result.data.Error);\n        }\n      }).catch(error => {\n        console.log(error);\n        this.$toast.error('Something went wrong');\n      });\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n    set_delete_id(id) {\n      this.delete_id = id;\n      console.log(this.delete_id);\n    },\n    clear_modal() {\n      this.delete_id = null;\n      this.viewed_record = [];\n      this.view_user_info = [];\n    },\n    deleteRecord() {\n      if (this.delete_id) {\n        //console.log(\"wants to delete\")\n        makeRequest.delete('/records/delete/' + this.delete_id).then(res => {\n          if (!res.data.Error) {\n            //console.log(res.data)\n            //this.records=[]\n            this.records = res.data;\n            this.num_records_animate();\n            this.num_today_animate();\n            this.$toast.success(\"record deleted successfully\");\n          } else {\n            this.$toast.error(res.data.Error);\n          }\n        }).catch(error => {\n          console.log(error);\n          this.$toast.error(\"Could not delete record\");\n        });\n      } else {\n        console.log(\"record id not set\");\n      }\n    },\n    set_view_rec(record) {\n      const rec = {\n        ...record\n      };\n      const usr = {\n        ...record.User\n      };\n      this.viewed_record = rec;\n      this.view_user_info = usr;\n    },\n    reset_current() {\n      this.currentPage = 1;\n    },\n    deleteAll() {\n      makeRequest.delete('/records/deleteAll/').then(res => {\n        if (!res.data.Error) {\n          //console.log(res.data)\n          this.records = res.data;\n          this.num_records_animate();\n          this.num_today_animate();\n          this.$toast.success(\"records deleted successfully\");\n        } else {\n          this.$toast.error(res.data.Error);\n        }\n      }).catch(error => {\n        console.log(error);\n        this.$toast.error(\"Could not delete record\");\n      });\n    },\n    exportPDF() {\n      const exportdata = this.filteredRecords;\n      if (exportdata.length === 0) {\n        this.$toast.error(\"Export empty\");\n      } else {\n        try {\n          const documentDefinition = {\n            content: [{\n              text: 'Records'\n            }, {\n              text: '\\n'\n            }, {\n              table: {\n                body: [['ID', 'username', 'date', 'arrivalTime', 'departureTime', 'createdAt'], ...exportdata.map(record => [record.id, record.User.username, record.date, record.arrivalTime, record.departureTime, record.createdAt])]\n              }\n            }],\n            styles: {\n              header: {\n                fontsize: 18,\n                marginBottom: 10\n              }\n            }\n          };\n          pdfMake.createPdf(documentDefinition).download('records.pdf');\n          pdfMake.createPdf(documentDefinition).open();\n        } catch (err) {\n          console.log(err);\n          this.$toast.error(\"An error occured try again\");\n        }\n      }\n    },\n    exportTxt() {\n      const exportdata = this.filteredRecords;\n      if (exportdata.length === 0) {\n        this.$toast.error(\"Export empty\");\n      } else {\n        try {\n          const textData = exportdata.map(record => `${record.id}, ${record.User.username},${record.date}, ${record.arrivalTime},${record.departureTime},${record.createdAt}`).join('\\n');\n          const blob = new Blob([textData], {\n            type: 'text/plain'\n          });\n          const url = URL.createObjectURL(blob);\n          const link = document.createElement('a');\n          link.href = url;\n          link.setAttribute('download', 'records.txt');\n          document.body.appendChild(link);\n          link.click();\n          this.$toast.success(\"Downloading....\");\n          //link.open()\n        } catch (error) {\n          console.log(error);\n          this.$toast.error(\"Network error\");\n        }\n      }\n    },\n    //     async exportDOCX(){\n    //         const exportdata = this.filteredRecords\n    //         if(exportdata.length === 0){\n    //             this.$toast.error(\"Export empty\")\n    //         }else{\n    //             //console.log(exportdata)\n    //             try{\n\n    //                 //load the doc template\n    //                 const templateFilePath = 'temp.docx';\n    //                 const templateContent = await this.loadTemplate(templateFilePath);\n\n    //                 // Array specifying the fields to be exported\n    //                 const fieldsToExport = ['id', 'date', 'arrivalTime','departureTime','createdAt','User.username'];\n    //                 //filer the records\n    //                 const filteredRecords = exportdata.map(record => {\n    //                     const filteredRecord = {};\n    //                     fieldsToExport.forEach(field => {\n    //                     if (field in record) {\n    //                         filteredRecord[field] = record[field];\n    //                     }\n    //                     });\n    //                         filteredRecord.username = record.User.username\n    //                         return filteredRecord;\n    //                  });\n    //                 console.log(filteredRecords)\n\n    //                 const generatedDocContent =await this.generateDocument(templateContent, filteredRecords);\n\n    //                     // Save or serve the generated document\n    //                 const outputFileName = 'records.docx';\n    //                 this.saveDocument(generatedDocContent, outputFileName);\n\n    //             }\n\n    //             catch(error){\n    //                 console.log(error)\n    //                 this.$toast.error(\"Network error\")\n    //             }\n    //          }\n\n    //     },\n    //     async loadTemplate(templateFilePath) {\n    //         try {\n    //             const response = await axios.get(templateFilePath, { responseType: 'arraybuffer' });\n    //             return new Uint8Array(response.data);\n    //         } catch (error) {\n    //             console.error('Error loading template:', error);\n    //             // Handle error loading template\n    //         }\n    //     },\n    //     saveDocument( generatedDocContent,outputFileName){\n    //         saveAs(new Blob([generatedDocContent]), outputFileName);\n\n    //     },\n    //    async generateDocument(template, filteredRecords) {\n    //          try {\n    //             const zip = new PizZip(template);\n    //             const doc = new Docxtemplater(zip);\n    //             doc.setData({ filteredRecords });\n    //             doc.render();\n    //             return doc.getZip().generate({ type: 'arraybuffer' });\n    //         } catch (error) {\n    //             console.error('Error generating document:', error);\n    //             // Handle error generating document\n    //         }\n    //     },\n    async exportDOCX() {\n      // Create a new document\n      const doc = new Document();\n\n      // Add content to the document\n      doc.addSection({\n        children: [new Paragraph({\n          children: [new TextRun('Records:')]\n        }), new Paragraph({\n          children: this.filteredRecords.map(record => {\n            return new TextRun(`${record.User.username} - $${record.date} - $${record.arrivalTime} - $${record.departureTime} - $${record.createdAt}`);\n          })\n        })]\n      });\n      //generate the docx\n      const generatedDocBuffer = await this.generateDocument(doc);\n\n      // Save or serve the generated document\n      const outputFileName = 'records.docx';\n      this.saveDocument(generatedDocBuffer, outputFileName);\n    },\n    async generateDocument(doc) {\n      const packer = new Packer();\n      return packer.toBuffer(doc);\n    },\n    saveDocument(generatedDocBuffer, outputFileName) {\n      const fileOptions = {\n        type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n      };\n      const generatedFile = new File([generatedDocBuffer], outputFileName, fileOptions);\n      saveAs(generatedFile);\n    },\n    exportXLSX() {\n      const exportdata = this.filteredRecords;\n      if (exportdata.length === 0) {\n        this.$toast.error(\"Export empty\");\n      } else {\n        console.log(exportdata);\n      }\n    }\n  },\n  mounted() {\n    this.num_records_animate();\n    this.num_today_animate();\n    this.fetch_records();\n  },\n  computed: {\n    filteredRecords() {\n      //if the entry is empty\n      if (this.record_search === '') {\n        return this.records;\n      } else {\n        this.reset_current();\n        const searchTermLower = this.record_search.toLowerCase();\n        return this.records.filter(record => {\n          const usernameMatch = record.User.username.toLowerCase().includes(searchTermLower);\n          const dateMatch = record.date.toLowerCase().includes(searchTermLower);\n          return usernameMatch || dateMatch;\n        });\n      }\n    },\n    totalPages() {\n      return Math.ceil(this.filteredRecords.length / this.itemsPerPage);\n    },\n    paginatedRecords() {\n      const startIndex = (this.currentPage - 1) * this.itemsPerPage;\n      const endIndex = startIndex + this.itemsPerPage;\n      return this.filteredRecords.slice(startIndex, endIndex);\n    }\n  }\n};","map":{"version":3,"names":["Document","Packer","Paragraph","TextRun","pdfMake","pdfFonts","saveAs","vfs","makeRequest","CountUp","name","data","count","numrecords","numtoday","records","record_search","itemsPerPage","currentPage","delete_id","viewed_record","view_user_info","methods","num_records_animate","num","get","options","duration","separator","numUserCountUp","start","error","console","log","num_today_animate","fetch_records","then","result","Error","$toast","catch","prevPage","nextPage","totalPages","set_delete_id","id","clear_modal","deleteRecord","delete","res","success","set_view_rec","record","rec","usr","User","reset_current","deleteAll","exportPDF","exportdata","filteredRecords","length","documentDefinition","content","text","table","body","map","username","date","arrivalTime","departureTime","createdAt","styles","header","fontsize","marginBottom","createPdf","download","open","err","exportTxt","textData","join","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","setAttribute","appendChild","click","exportDOCX","doc","addSection","children","generatedDocBuffer","generateDocument","outputFileName","saveDocument","packer","toBuffer","fileOptions","generatedFile","File","exportXLSX","mounted","computed","searchTermLower","toLowerCase","filter","usernameMatch","includes","dateMatch","Math","ceil","paginatedRecords","startIndex","endIndex","slice"],"sources":["/Users/hardpro/Desktop/Vue JS/aics-attend/client/src/views/Admin/AllRecords.vue"],"sourcesContent":["<template>\n    <div class=\"container-fluid pt-4 px-4\">\n                <div class=\"row g-4\">\n                    <div class=\"col-sm-12 col-xl-8\">\n                        <div class=\"bg-light rounded d-flex align-items-center justify-content-between p-4\">\n                            <i class=\"fa fa-server fa-3x text-primary\"></i>\n                            <div class=\"ms-3\">\n                                <h4 class=\"mb-2\">Total Records</h4>\n                                <h3 class=\"mb-0 text-primary\" id=\"numrecords\">{{ numrecords }}</h3>\n                            </div>\n                        </div>\n                        \n                    </div>\n                    <div class=\"col-sm-12 col-xl-4\">\n                        <div class=\"bg-light rounded d-flex align-items-center justify-content-between p-4\">\n                            <i class=\"fa fa-check fa-3x text-primary\"></i>\n                            <div class=\"ms-3\">\n                                <h4 class=\"mb-2\">Today Records</h4>\n                                <h3 class=\"mb-0 text-primary\" id=\"numtoday\">{{ numtoday }}</h3>\n                            </div>\n                        </div>\n                        \n                    </div>\n                </div>\n        </div>\n    <div class=\"container-fluid pt-4 px-4\">\n                <div class=\"bg-light text-center rounded p-4 custom-row\">\n                    <div class=\"d-flex align-items-center justify-content-between mb-4 custom\">\n                        <h5 class=\"mb-0\">Record List</h5>\n\n                        \n                        <input type=\"email\" class=\"form-control search\" id=\"search\" placeholder=\"Search for a record...\" v-model=\"record_search\">\n                                \n                        <div class=\"button-group\">\n                            <button class=\"btn btn-danger\" data-bs-toggle=\"modal\" data-bs-target=\"#deleteAll\">Delete All <i class=\"fa fa-trash\"></i></button>\n                            <!--drop down-->\n                            <div class=\"dropdown\">\n                                <a class=\"btn btn-primary dropdown-toggle mx-1\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                                    <i class=\"fa fa-file\"></i> Export\n                                </a>\n\n                                <ul class=\"dropdown-menu\">\n                                    <li><a class=\"dropdown-item\" @click=\"exportPDF\"><i class=\"fa fa-file-pdf\"></i> PDF</a></li>\n                                    <li><a class=\"dropdown-item\" @click=\"exportTxt\"><i class=\"fa fa-file\"></i> TXT</a></li>\n                                    <li><a class=\"dropdown-item\" @click=\"exportDOCX\"><i class=\"fa fa-file-word\"></i> Word(docx)</a></li>\n                                    <li><a class=\"dropdown-item\" @click=\"exportXLSX\"><i class=\"fa fa-file-excel\"></i> Excel(xlsx)</a></li>\n                                </ul>\n                            </div>\n\n\n\n\n                            <!--end of drop down-->\n\n                        </div>\n                        \n                    </div>\n                    <div class=\"table-responsive\" v-if=\"paginatedRecords.length>0\">\n                        <table class=\"table text-center align-middle table-bordered table-hover mb-0\">\n                            <thead>\n                                <tr class=\"text-dark\">\n                                    <th scope=\"col\">User Profile</th>\n                                    <th scope=\"col\">Username</th>\n                                    <th scope=\"col\">Date</th>\n                                    <th scope=\"col\">Arr. Time</th>\n                                    <th scope=\"col\">Dept Time</th>\n                                    <th scope=\"col\">Actions</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr  v-for=\"record in paginatedRecords\" :key=\"record.id\">\n                                    <td><img class=\"rounded-circle mx-auto\" src=\"../../assets/profile3.jpg\" alt=\"\" style=\"width: 40px; height: 40px;\"></td>\n                                    <td>{{ record.User.username }}</td>\n                                    <td>{{ record.date }}</td>\n                                    <td>{{ record.arrivalTime }}</td>\n                                    <td>{{ record.departureTime }}</td>\n                                    <td><a class=\"btn btn-sm btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#viewRecord\" @click=\"set_view_rec(record)\" >Detail</a>\n                                        <a class=\"btn btn-sm btn-danger mx-1 my-sm-1\" data-bs-toggle=\"modal\" data-bs-target=\"#deleteRecord\" @click=\"set_delete_id(record.id)\">Delete</a>\n                                    </td>\n                                </tr>\n                                \n                            </tbody>\n                        </table>\n                        <!----pagination-->\n                                <nav aria-label=\"...\">\n                                    <ul class=\"pagination\">\n                                        <li class=\"page-item\">\n                                        <button class=\"page-link btn-paginat\"  @click=\"prevPage\" :disabled=\"currentPage === 1\" >Previous</button>\n                                        </li>\n                                        <li class=\"page-item active\" aria-current=\"page\">\n                                            <a class=\"page-link\">{{ currentPage }}</a>\n                                        </li>\n                                        <li class=\"page-item\">\n                                        <button class=\"page-link btn-paginat\"  @click=\"nextPage\" :disabled=\"currentPage === totalPages\">Next</button>\n                                        </li>\n                                    </ul>\n                                </nav>\n                    </div>\n                    <div class=\"div-blank\" v-else>\n                        <div class=\"not-found-img mt-3\" style=\"width: 20%; height: 150px;\" >\n                        </div>\n                        <h6 class=\"mt-3\">No Records...</h6>\n                    </div>\n                </div>\n            </div>\n\n            <!-----modal for view record details-->\n            <div class=\"modal fade\" id=\"viewRecord\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\">\n                    <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Record details</h5>\n                        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" @click=\"clear_modal\"></button>\n                    </div>\n                    <form >\n                            <div class=\"modal-body\">\n                                <div class=\"mb-3\">\n                                    <label for=\"username_id\" class=\"col-form-label\">Username</label>\n                                    <input type=\"text\" class=\"form-control\" id=\"username_id\" v-model=\"view_user_info.username\" placeholder=\"\" disabled>\n                                </div>\n                                <div class=\"mb-3\">\n                                    <label for=\"date_id\" class=\"col-form-label\">Date</label>\n                                    <input type=\"text\" class=\"form-control\" id=\"dats_id\" v-model=\"viewed_record.date\"  placeholder=\"\" disabled>\n                                </div>\n                                <div class=\"mb-3\">\n                                    <label for=\"arr_id\" class=\"col-form-label\">Arrival Time</label>\n                                    <input type=\"text\" class=\"form-control\" id=\"arr_id\" v-model=\"viewed_record.arrivalTime\"  placeholder=\"\" disabled>\n                                </div>\n                                <div class=\"mb-3\">\n                                    <label for=\"dep_id\" class=\"col-form-label\">Departure Time</label>\n                                    <input type=\"email\" class=\"form-control\" id=\"dep_id\" v-model=\"viewed_record.departureTime\"  placeholder=\"\" disabled>\n                                </div>\n                                \n                                <div class=\"mb-3 image-div\" v-if=\"view_user_info.profilepicture\">\n                                    <img :src=\"view_user_info.profilepicture\" alt=\"file preview\" class=\"modal-img\">\n                                </div>\n\n\n                                \n                            </div>\n                            <div class=\"modal-footer\">\n                                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\" @click=\"clear_modal\">Close</button>\n                               \n                            </div>\n                    </form>\n                    </div>\n             </div>\n\n        \n            </div>\n\n\n            <!--delete record modal-->\n            <div class=\"modal fade\" id=\"deleteRecord\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog\">\n                    <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h5 class=\"modal-title\" id=\"exampleModalLabel\"><i class=\"fa fa-exclamation-triangle text-danger fa-2x\" aria-hidden=\"true\" style=\"margin-right: 10px;\"></i>Delete Record</h5>\n                        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" @click=\"clear_modal\"></button>\n                    </div>\n                    <div class=\"modal-body\">\n                        Do you wan't to delete this Record?\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\" @click=\"clear_modal\">Cancel</button>\n                        <button type=\"button\" class=\"btn btn-danger\" data-bs-dismiss=\"modal\" @click=\"deleteRecord\">Yes,Delete</button>\n                    </div>\n                    </div>\n                </div>\n            </div>\n\n             <!--delete all records-->\n             <div class=\"modal fade\" id=\"deleteAll\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog\">\n                    <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h5 class=\"modal-title\" id=\"exampleModalLabel\"><i class=\"fa  fa-ban text-danger fa-2x\" aria-hidden=\"true\" style=\"margin-right: 10px;\"></i><span style=\"margin-bottom: 10px;\">Delete Records</span></h5>\n                        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" ></button>\n                    </div>\n                    <div class=\"modal-body\">\n                        Do you wan't to delete <b>All</b> Records?\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\" >Cancel</button>\n                        <button type=\"button\" class=\"btn btn-danger\" data-bs-dismiss=\"modal\" @click=\"deleteAll\">Yes,Delete</button>\n                    </div>\n                    </div>\n                </div>\n            </div>\n  \n</template>\n\n<script>\n//pdf\n//import axios from 'axios';\nimport { Document, Packer, Paragraph, TextRun } from 'docx';\nimport pdfMake from 'pdfmake/build/pdfmake';\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\n//word\n//import Docxtemplater from 'docxtemplater';\n//import { generateDocx } from 'docxtemplater-utils';\n//import PizZip from 'pizzip';\n//import JSZip from 'jszip';\nimport { saveAs } from 'file-saver';\n\n\npdfMake.vfs = pdfFonts.pdfMake.vfs;\nimport { makeRequest } from '@/axios';\nimport { CountUp } from 'countup.js'\nexport default {\n    name:'AllRecords',\n    data(){\n        return{\n            count:0,\n            numrecords:0,\n            numtoday:0,\n            records:[],\n            record_search:'',\n            itemsPerPage:5,\n            currentPage:1,\n            delete_id:null,\n            viewed_record:[],\n            view_user_info:[]\n        }\n    },\n    methods:{\n        async num_records_animate(){\n                try{\n                    const num= await makeRequest.get('/records/count');\n                    const options = {\n                    duration: 3, \n                    separator: ',',\n                    };\n                    const numUserCountUp = new CountUp('numrecords',num.data, this.numrecords,options); \n                    numUserCountUp.start(); \n                    this.numrecords=num.data\n                }\n                catch(error){\n                        console.log(error)\n\n                }\n\n\n            },\n        async num_today_animate(){\n                try{\n                    const num= await makeRequest.get('/records/countToday');\n                    const options = {\n                    duration: 3, \n                    separator: ',',\n                    };\n                    const numUserCountUp = new CountUp('numtoday',num.data, this.numtoday,options); \n                    numUserCountUp.start();\n                    this.numtoday=num.data \n                }\n                catch(error){\n                        console.log(error)\n\n                }\n\n\n        },\n        fetch_records(){\n           \n            makeRequest.get('/records/')\n            .then(result=>{\n                if(!result.data.Error){\n                    this.records = result.data;\n                    console.log(result.data)\n\n                }else{\n                    this.$toast.error(result.data.Error)\n                }\n\n            })\n            .catch(error=>{\n                console.log(error);\n                this.$toast.error('Something went wrong')\n            })\n        },\n        prevPage(){\n            if(this.currentPage >1){\n                this.currentPage --;\n            }\n        },\n        nextPage(){\n            if(this.currentPage < this.totalPages){\n                this.currentPage++;\n            }\n\n        },\n        set_delete_id(id){\n            this.delete_id=id\n            console.log(this.delete_id)\n\n        },\n        clear_modal(){\n            this.delete_id=null\n            this.viewed_record=[]\n            this.view_user_info=[]\n        },\n        deleteRecord(){\n            if(this.delete_id){\n                \n                    //console.log(\"wants to delete\")\n                        makeRequest.delete('/records/delete/'+this.delete_id)\n                        .then(res=>{\n                            if(!res.data.Error){\n                                //console.log(res.data)\n                                //this.records=[]\n                                this.records= res.data\n                                this.num_records_animate();\n                                this.num_today_animate();\n                                this.$toast.success(\"record deleted successfully\")\n\n                            }else{\n                                this.$toast.error(res.data.Error)\n                            }\n\n                        })\n                        .catch(error=>{\n                            console.log(error);\n                            this.$toast.error(\"Could not delete record\")\n                        })\n             \n            }else{\n                console.log(\"record id not set\")\n            }\n            },\n        set_view_rec(record){\n            const rec = {...record}\n            const usr={...record.User}\n            this.viewed_record = rec\n            this.view_user_info=usr\n        },\n        reset_current(){\n            this.currentPage=1\n        },\n        deleteAll(){\n                     makeRequest.delete('/records/deleteAll/')\n                        .then(res=>{\n                            if(!res.data.Error){\n                                //console.log(res.data)\n                                this.records= res.data\n                                this.num_records_animate();\n                                this.num_today_animate();\n                                this.$toast.success(\"records deleted successfully\")\n\n                            }else{\n                                this.$toast.error(res.data.Error)\n                            }\n\n                        })\n                        .catch(error=>{\n                            console.log(error);\n                            this.$toast.error(\"Could not delete record\")\n                        })\n\n        },\n        exportPDF(){\n            const exportdata= this.filteredRecords\n           \n            if(exportdata.length === 0){\n                this.$toast.error(\"Export empty\")\n            }else{\n                try{\n\n                \n                    const documentDefinition={\n                        content:[\n                            {text:'Records'},\n                            {text:'\\n'},\n                            {\n                                table:{\n                                    body:[\n                                        ['ID','username','date','arrivalTime','departureTime','createdAt'],\n                                        ...exportdata.map(record=>[record.id,record.User.username,record.date,record.arrivalTime,record.departureTime,record.createdAt])\n                                    ]\n                                }\n                            }\n                        ],\n                        styles:{\n                            header:{fontsize:18,marginBottom:10}\n                        }\n\n                        \n                    }\n                    pdfMake.createPdf(documentDefinition).download('records.pdf');\n                    pdfMake.createPdf(documentDefinition).open()\n                    \n                }catch(err){\n                    console.log(err)\n                    this.$toast.error(\"An error occured try again\")\n                }\n            }\n\n        },\n        exportTxt(){\n            const exportdata = this.filteredRecords\n            if(exportdata.length === 0){\n                this.$toast.error(\"Export empty\")\n            }else{\n                try{\n                    const textData = exportdata.map(record => `${record.id}, ${record.User.username},${record.date}, ${record.arrivalTime},${record.departureTime},${record.createdAt}`).join('\\n');\n                    const blob = new Blob([textData], { type: 'text/plain' });\n                    const url = URL.createObjectURL(blob);\n                    const link = document.createElement('a');\n                    link.href = url;\n                    link.setAttribute('download', 'records.txt');\n                    document.body.appendChild(link);\n                    link.click();\n                    this.$toast.success(\"Downloading....\")\n                    //link.open()\n\n                }catch(error){\n                    console.log(error)\n                    this.$toast.error(\"Network error\")\n\n                }\n\n                \n            }\n\n        },\n    //     async exportDOCX(){\n    //         const exportdata = this.filteredRecords\n    //         if(exportdata.length === 0){\n    //             this.$toast.error(\"Export empty\")\n    //         }else{\n    //             //console.log(exportdata)\n    //             try{\n                       \n    //                 //load the doc template\n    //                 const templateFilePath = 'temp.docx';\n    //                 const templateContent = await this.loadTemplate(templateFilePath);\n\n    //                 // Array specifying the fields to be exported\n    //                 const fieldsToExport = ['id', 'date', 'arrivalTime','departureTime','createdAt','User.username'];\n    //                 //filer the records\n    //                 const filteredRecords = exportdata.map(record => {\n    //                     const filteredRecord = {};\n    //                     fieldsToExport.forEach(field => {\n    //                     if (field in record) {\n    //                         filteredRecord[field] = record[field];\n    //                     }\n    //                     });\n    //                         filteredRecord.username = record.User.username\n    //                         return filteredRecord;\n    //                  });\n    //                 console.log(filteredRecords)\n\n    //                 const generatedDocContent =await this.generateDocument(templateContent, filteredRecords);\n\n    //                     // Save or serve the generated document\n    //                 const outputFileName = 'records.docx';\n    //                 this.saveDocument(generatedDocContent, outputFileName);\n                        \n\n\n    //             }\n                    \n    //             catch(error){\n    //                 console.log(error)\n    //                 this.$toast.error(\"Network error\")\n    //             }\n    //          }\n\n    //     },\n    //     async loadTemplate(templateFilePath) {\n    //         try {\n    //             const response = await axios.get(templateFilePath, { responseType: 'arraybuffer' });\n    //             return new Uint8Array(response.data);\n    //         } catch (error) {\n    //             console.error('Error loading template:', error);\n    //             // Handle error loading template\n    //         }\n    //     },\n    //     saveDocument( generatedDocContent,outputFileName){\n    //         saveAs(new Blob([generatedDocContent]), outputFileName);\n\n    //     },\n    //    async generateDocument(template, filteredRecords) {\n    //          try {\n    //             const zip = new PizZip(template);\n    //             const doc = new Docxtemplater(zip);\n    //             doc.setData({ filteredRecords });\n    //             doc.render();\n    //             return doc.getZip().generate({ type: 'arraybuffer' });\n    //         } catch (error) {\n    //             console.error('Error generating document:', error);\n    //             // Handle error generating document\n    //         }\n    //     },\n    async exportDOCX() {\n        // Create a new document\n        const doc = new Document();\n\n        // Add content to the document\n        doc.addSection({\n            children: [\n            new Paragraph({\n                children: [\n                new TextRun('Records:'),\n                ],\n            }),\n            new Paragraph({\n                children: this.filteredRecords.map(record => {\n                return new TextRun(`${record.User.username} - $${record.date} - $${record.arrivalTime} - $${record.departureTime} - $${record.createdAt}`);\n                }),\n            }),\n            ],\n        });\n        //generate the docx\n        const generatedDocBuffer =await this.generateDocument(doc);\n\n        // Save or serve the generated document\n        const outputFileName = 'records.docx';\n        this.saveDocument(generatedDocBuffer, outputFileName);\n     },\n     async generateDocument(doc) {\n        const packer = new Packer();\n        return packer.toBuffer(doc);\n    },\n    saveDocument(generatedDocBuffer, outputFileName) {\n        const fileOptions = { type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' };\n        const generatedFile = new File([generatedDocBuffer], outputFileName, fileOptions);\n        saveAs(generatedFile);\n    },\n        exportXLSX(){\n            const exportdata = this.filteredRecords\n            if(exportdata.length === 0){\n                this.$toast.error(\"Export empty\")\n            }else{\n                console.log(exportdata)\n            }\n\n        }\n\n    },\n    mounted(){\n        this.num_records_animate();\n        this.num_today_animate();\n        this.fetch_records()\n\n        \n\n\n\n    },\n    computed:{\n        filteredRecords() {\n            //if the entry is empty\n            if (this.record_search === '') {\n                return this.records;\n            }else{\n                this.reset_current();\n                const searchTermLower = this.record_search.toLowerCase();\n                return this.records.filter(record => {\n                    const usernameMatch = record.User.username.toLowerCase().includes(searchTermLower);\n                    const dateMatch = record.date.toLowerCase().includes(searchTermLower);\n                    return usernameMatch || dateMatch;\n                });\n            }\n        },\n        totalPages(){\n            return Math.ceil(this.filteredRecords.length/this.itemsPerPage)\n        },\n        paginatedRecords(){\n            const startIndex = (this.currentPage-1)*this.itemsPerPage;\n            const endIndex = startIndex+this.itemsPerPage\n            return this.filteredRecords.slice(startIndex,endIndex)\n\n        },\n        \n\n    }\n\n}\n</script>\n\n<style>\n#search{\n    width: 45%;\n    border-radius: 17px;\n}\n\n@media screen and (max-width: 610px) {\n    .custom{\n        display: flex;\n        flex-direction: column;\n    }\n    .column #search{\n        margin-top: 2px;\n        margin-bottom: 5px;\n        width:80%;\n    }\n    .column div button{\n    \n        margin-top: 3px;\n\n    }\n    .button-group{\n    margin-top: 10px;\n    }\n\n    \n}\n.button-group{\n    display: flex;\n    flex-direction: row;\n}\n.div-blank{\n    display: flex;\n    width: 100%;\n    justify-content: center;\n    align-content: center;\n    align-items: center;\n    flex-direction: column;\n}\n.not-found-img{\n    \n    height: 200px;\n    align-content: center;\n    justify-content: center;\n    background-image: url('../../assets/blank.svg');\n    background-size: cover;\n    background-position: center;\n    margin-right: 10px;\n\n}\n.btn-paginat:disabled{\n    color: black;\n}\n.modal-body label{\n    float: left;\n}\n.dropdown-menu .dropdown-item{\n    cursor: pointer;\n\n}\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}